openapi: 3.0.3
info:
  version: 0.1.0
  title: üõ¨[AOS 2023] Plataformas y Aeronaves üõ´
  description: >
    ## **[AOS 2023]** ‚úàÔ∏è API REST para la gesti√≥n de Plataformas y Aeronaves.
servers:
  - url: http://127.0.0.1:80/api/v1

paths:
  /plataforma:
    get:
      summary: Obtiene todas las plataformas
      description: |
        La siguiente tabla define los c√≥digos de estado que puede devolver este endpoint
        
        | Status Code | Descripci√≥n | Motivo                             |
        | ------------| ------------| -----------------------------------|
        | **200**     | OK          | Listado de plataformas             |
        | **404**     | NOT FOUND   | No hay ninguna plataforma          |
      operationId: plataforma_cget
      responses:
        '200':
          description: Lista de plataformas disponibles
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                type: object
                properties:
                  plataformas:
                    description: array de plataformas
                    type: array
                    items:
                      $ref: '#/components/schemas/Plataforma'
              examples:
                plataformas-example:
                  $ref: '#/components/examples/plataformas-example'
        '404':
          $ref: '#/components/responses/Response_404'
    options:
      summary: Proporciona la lista de los m√©todos HTTP soportados por esta ruta.
      description: Devuelve una cabecera `Allow` con la lista de m√©todos HTTP soportados (separados por comas).
      operationId: plataforma_coptions
      responses:
        '204':
          description: 'cabecera `Allow` &lt;El cuerpo de la respuesta est√° vac√≠o&gt;'
          headers:
            Allow:
              $ref: '#/components/headers/Allow'

  /plataforma/{plataformaId}:
    parameters:
      - $ref: '#/components/parameters/plataformaId'
    options:
      summary: Proporciona la lista de los m√©todos HTTP soportados por esta ruta.
      description: Devuelve una cabecera `Allow` con la lista de m√©todos HTTP soportados (separados por comas).
      operationId: plataforma_options
      responses:
        '204':
          description: 'cabecera `Allow` &lt;El cuerpo de la respuesta est√° vac√≠o&gt;'
          headers:
            Allow:
              $ref: '#/components/headers/Allow'

components:
  schemas:
    Plataforma:
      title: Plataforma de estacionamiento de Aeronaves
      description: >
        √Årea definida, en un aer√≥dromo terrestre, destinada a dar cabida a
        las aeronaves para los fines de embarque o desembarque del pasaje,
        correo o carga, reabastecimiento de combustible, estacionamiento o
        mantenimiento incluyendo calles de rodaje en plataforma, calles de
        acceso al puesto de estacionamiento y v√≠as de servicio.<br>
        Reglamento de la Circulaci√≥n A√©rea Operativa (BOE-A-1994-18714)
      type: object
      properties:
        plataforma:
          type: object
          required: [ id, tipo_envergadura ]
          properties:
            id:
              $ref: '#/components/schemas/Id_Plataforma'
            tipo_envergadura:
              $ref: '#/components/schemas/Envergadura_Aeronave'
            estado:
              $ref: '#/components/schemas/Estados_Plataformas'
            # A√±adir resto de propiedades
      example: { "plataforma": { "id": "P01-001-A", "tipo_envergadura": "C", "estado": "Reservada"}}

    Aeronave:
      description: >
        Toda m√°quina que puede desplazarse en la atm√≥sfera por reacciones del aire que
        no sean las reacciones del mismo contra la superficie de la tierra.<br>
        OACI - Organizaci√≥n de Aviaci√≥n Civil Internacional
      type: object
      properties:
        aeronave:
          type: object
          required: [ matr√≠cula, envergadura ]
          properties:
            matr√≠cula:
              description: Matr√≠cula de la aeronave
              type: string
              pattern: "^[A-Z]{1,2}-[A-Z]{3}$"
              example: "EC-JGR"
            envergadura:
              $ref: '#/components/schemas/Envergadura_Aeronave'
      example: { "aeronave": { "matr√≠cula": "EC-JGR", "envergadura": "B" }}
      # https://v6.fakerjs.dev/guide/
      x-faker: helpers.regexpStyleStringParse('P[10-99]-[100-999]-X')

    Id_Plataforma:
      title: Identificador √∫nico de la plataforma
      type: string
      pattern: "^[A-Z]{1}[0-9]{2}-[0-9]{3}-[A-Z]$"
      example: "P01-001-A"
      # https://v6.fakerjs.dev/guide/
      x-faker: helpers.regexpStyleStringParse('P[10-99]-[100-999]-X')

    Envergadura_Aeronave:
      # https://es.wikipedia.org/wiki/C%C3%B3digo_de_referencia_aeroportuario
      description: |
        Clasificaci√≥n las aeronaves por su envergadura:
        * `A`: hasta 15 m - Cessna 172, Diamond DA40
        * `B`: de 15 m a 24 m - Saab 340
        * `C`: de 24 m a 36 m - McDonnell Douglas MD-81, Airbus A318, Airbus A319, Airbus A320, Airbus A321, Boeing 737
        * `D`: de 36 m a 52 m - McDonnell Douglas MD-11, Airbus A300, Boeing 757, Boeing 767
        * `E`: de 52 m a 65 m - Airbus A330, Airbus A340, Boeing 747, Boeing 777, Boeing 787, Airbus A350
        * `F`: de 65 m a 80 m - Airbus A380, Boeing 747-8i.
      type: string
      enum: [ A, B, C, D, E, F ]
      # https://v6.fakerjs.dev/guide/
      x-faker: helpers.arrayElement([ 'A', 'B', 'C', 'D', 'E', 'F' ])

    Estados_Plataformas:
      description: |
        Estado de la Plataforma:
        * `Libre`: Plataforma disponible
        * `Ocupada`: Plataforma ocupada
        * `Reservada`: Plataforma reservada para pr√≥xima utilizaci√≥n
        * `Inhabilitada`: Plataforma inhabilitada para su uso
      type: string
      enum: [ "Libre", "Ocupada", "Reservada", "Inhabilitada" ]
      # https://v6.fakerjs.dev/guide/
      x-faker: helpers.arrayElement([ 'Libre', 'Ocupada', 'Reservada', 'Inhabilitada' ])

    HTTP_Problem:
      type: object
      externalDocs:
        url: https://tools.ietf.org/html/rfc7807
      description: |
        Problem Details for HTTP APIs
        [https://tools.ietf.org/html/rfc7807](https://tools.ietf.org/html/rfc7807)
      properties:
        type:
          type: string
          format: uri
          description: A URI reference [RFC3986] that identifies the problem type
        title:
          type: string
          description: short human-readable summary of the problem type
        status:
          type: number
          description: HTTP status code
        detail:
          type: string
          description: Human-readable explanation specific to this occurrence of the problem
        instance:
          type: string
          format: uri
          description: "A URI reference that identifies the specific
            occurrence of the problem.  It may or may not yield further
            information if dereferenced"

  headers:
    ETag:
      description: "Entity Tag (identificador √∫nico proporcionado para validaci√≥n de cach√©)"
      schema:
        type: string
        pattern: "[0-9a-f]*"
        example:
          33a64df551425fcc
    Allow:
      description: Lista de m√©todos HTTP soportados
      schema:
        type: string
      example: GET, DELETE, PUT, OPTIONS
    Location:
      description: '`URI` del nuevo recurso'
      schema:
        type: string
        format: uri
        x-faker: internet.url
        example:
          https://example.com/api/v1/plataformas/1936

  responses:
    Response_404:
      description: '`NOT FOUND`: recurso no disponible'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problem'
          examples:
            response-http-404:
              $ref: '#/components/examples/example-response-http-404'

  parameters:
    plataformaId:
      name: plataformaId
      in: path
      description: Identificador √∫nico de la Plataforma
      required: true
      schema:
        $ref: '#/components/schemas/Id_Plataforma'
    ifMatchParam:
      name: If-Match
      in: header
      description: ETag del recurso que se desea modificar
      required: true
      schema:
        type: string
        pattern: "[0-9a-f]*"


  examples:
    example-response-http-404:
      value:
        type: https://httpstatuses.com/404
        title: NOT FOUND
        status: 404
        detail: El recurso solicitado no est√° disponible.
        instance: about:blank
    plataformas-example:
      value:
        plataformas:
          - { "plataforma": { "id": "P01-001-A", "tipo_envergadura": "C", "estado": "Reservada"} }
          - { "plataforma": { "id": "P02-039-C", "tipo_envergadura": "E", "estado": "Libre"} }
